###########
# BUILDER #
###########

FROM python:3.12.0-slim AS builder

WORKDIR /usr/src/app

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Обновляем список пакетов и устанавливаем зависимости для сборки
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    postgresql-server-dev-all gcc python3-dev musl-dev && \
    rm -rf /var/lib/apt/lists/*  # Очистка кэша после установки

# Обновляем pip до последней версии
RUN pip install --upgrade pip

# Копируем requirements.txt и устанавливаем необходимые колеса (wheels)
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt


#########
# FINAL #
#########

FROM python:3.12.0-slim

# Обновляем apt и устанавливаем только необходимые библиотеки для продакшн-окружения
RUN apt-get update && \
    apt-get install -y --no-install-recommends libpq-dev && \
    rm -rf /var/lib/apt/lists/*  # Очистка кэша

# Создаем пользователя и группу
RUN addgroup --system app && adduser --system --ingroup app --home /home/app --shell /bin/bash app

# Создание директорий для приложения
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir -p $APP_HOME/static $APP_HOME/media

WORKDIR $APP_HOME

# Устанавливаем зависимости через предварительно собранные колеса
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --no-cache /wheels/*

# Копирование entrypoint и проекта Django
COPY ./entrypoint.prod.sh $APP_HOME
COPY . $APP_HOME

# Изменяем владельца директорий на пользователя app
RUN chown -R app:app $APP_HOME

# Устанавливаем правильного пользователя для запуска приложения
USER app

# Сделаем скрипт запуска исполнимым
RUN chmod +x /home/app/web/entrypoint.prod.sh

# Устанавливаем точку входа
ENTRYPOINT ["/home/app/web/entrypoint.prod.sh"]
