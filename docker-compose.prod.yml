
services:
  web:
    # Берем Dockerfile из каталога htmx_books_cached
    container_name: weather_application
    build:
      context: src
      dockerfile: Dockerfile.prod
    # Запускаем сервер gunicorn
    command: gunicorn core.wsgi:application --bind 0.0.0.0:8000
    # Слушаем порт 8000
    expose:
      - 8000
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/media
    # Файл содержащий переменные для контейнера
    env_file:
      - .env
    # Дожидаемся запуска контейнеров db и memcached
    depends_on:
      - db
      - redis

  db:
    # Берём образ БД PostgreSQL версии 15
    container_name: database_postgres
    image: postgres:17
    # Примонтируем том postgres-data к директории /var/lib/postgresql/data контейнера db
    volumes:
      - postgres-data:/var/lib/postgresql/data

    # Используем значения переменных окружения из .env файла
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_NAME}

  redis:
    image: redis:7
    container_name: redis_db
    expose:
      - "6379"




  nginx:
    build: nginx
    # Подключаем статические и медиа файлы
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/media
    ports:
      - 80:80
    depends_on:
      - web
volumes:
    # Объявляем том postgres-data для хранения данных PostgreSQL
  postgres-data:
  static_volume:
  media_volume:


